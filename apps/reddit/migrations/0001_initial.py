# Generated by Django 2.1.5 on 2019-01-12 00:31

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import apps.core.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [('core', '0001_initial')]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('subreddit_name', models.CharField(max_length=255)),
                ('reddit_id', models.CharField(max_length=200, unique=True)),
                ('title', models.TextField()),
                ('url', apps.core.fields.URLField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('accepted', 'accepted'),
                            ('pending', 'pending'),
                            ('almost', 'almost'),
                            ('rejected', 'rejected'),
                        ],
                        default='accepted',
                        max_length=200,
                    ),
                ),
                ('score', models.IntegerField(null=True)),
                ('source_url', apps.core.fields.URLField(blank=True, null=True)),
                (
                    'type',
                    models.CharField(
                        choices=[
                            ('link', 'link'),
                            ('text', 'text'),
                            ('photo', 'photo'),
                            ('video', 'video'),
                        ],
                        default='link',
                        max_length=200,
                    ),
                ),
                ('text', models.TextField(blank=True, null=True)),
                ('nsfw', models.BooleanField(default=False)),
                ('comments', apps.core.fields.URLField(blank=True, null=True)),
                ('num_comments', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RedditConfig',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('enabled', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Reddit Configuration',
                'verbose_name_plural': 'Reddit Configuration',
            },
        ),
        migrations.CreateModel(
            name='Subreddit',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        help_text='Name of subreddit. W/o /r/.', max_length=255
                    ),
                ),
                (
                    'low_score_limit',
                    models.IntegerField(
                        default=1000,
                        help_text='After exceeding this limit posts will be send to moderation.',
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    'score_limit',
                    models.IntegerField(
                        default=1000,
                        help_text='After exceeding this limit posts will be published.',
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    'pass_nsfw',
                    models.BooleanField(
                        default=False, help_text='Allow to post NSFW content.'
                    ),
                ),
                (
                    'show_title',
                    models.BooleanField(
                        default=True, help_text='Drop title if it is useless.'
                    ),
                ),
                ('enabled', models.BooleanField(default=True)),
                ('on_moderation', models.BooleanField(default=True)),
                (
                    'forbidden_keywords',
                    models.TextField(
                        blank=True,
                        null=True,
                        help_text="Comma-separated list of words/phrases.",
                    ),
                ),
                (
                    'subscriptions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='List of subscriptions that will be notified about subreddit updates.',
                        related_name='subreddits',
                        to='core.Subscription',
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='subreddit',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to='reddit.Subreddit'
            ),
        ),
    ]
