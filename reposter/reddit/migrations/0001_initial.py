# Generated by Django 2.2.4 on 2019-08-09 00:57

import core.fields
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Subreddit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Subreddit name or search criterion (eg 'popular' or 'all')", max_length=255)),
                ('active', models.BooleanField(default=True)),
                ('score_limit', models.IntegerField(default=1000, help_text='Required score to be send to moderation.', validators=[django.core.validators.MinValueValidator(0)])),
                ('score_limit_repost', models.IntegerField(default=100000, help_text='Required score for automatic repost by bot.', validators=[django.core.validators.MinValueValidator(0)])),
                ('pass_nsfw', models.BooleanField(default=False)),
                ('show_title', models.BooleanField(default=True)),
                ('forbidden_keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('accepted', 'accepted'), ('pending', 'pending'), ('almost', 'almost'), ('rejected', 'rejected')], default='accepted', max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('reddit_id', models.CharField(max_length=200, unique=True)),
                ('subreddit_name', models.CharField(max_length=255)),
                ('title', models.TextField()),
                ('score', models.IntegerField()),
                ('nsfw', models.BooleanField(default=False)),
                ('comments', core.fields.URLField(blank=True, null=True)),
                ('url', core.fields.URLField(blank=True, null=True)),
                ('photo_url', core.fields.URLField(blank=True, null=True)),
                ('video_url', core.fields.URLField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('file_path', models.TextField(blank=True, null=True)),
                ('subreddit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reddit.Subreddit')),
            ],
        ),
    ]
